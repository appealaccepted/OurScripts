local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait -- Only returns if the GUI has not been terminated. For 'while Wait() do' loops

local PepsisWorld = library:CreateWindow({
Name = "Leangelo, Ball",
Themeable = {
Info = "Discord Server: VzYTJ7Y"
}
})

local GeneralTab = PepsisWorld:CreateTab({
Name = "Main"
})

local FarmingSection = GeneralTab:CreateSection({
Name = "Misc"
})

FarmingSection:AddButton({
    Name = "Instant Prompts",
    Callback = function()
        local function ProximityPromptDuration(HoldDur)
            for i,v in workspace:GetDescendants() do
                 if v:IsA("ProximityPrompt") then
                     v.HoldDuration = HoldDur
                 end
            end
         end
        
         ProximityPromptDuration(0)
        
        workspace.DescendantAdded:Connect(function(Added)
             if Added:IsA("ProximityPrompt") then
                 ProximityPromptDuration(0)
             end
        end)
    end
    })


    FarmingSection:AddButton({
        Name = "Rapping Prompts",
        Callback = function()
            -- Configuration for ProximityPrompts
local promptSettings = {
    ["workspace.Jobs.StudioJob.Posters.Poster1.ProximityPrompt"] = 1, -- Hold duration for the first ProximityPrompt
    ["workspace.Jobs.StudioJob.Posters.Poster2.ProximityPrompt"] = 1  -- Hold duration for the second ProximityPrompt
}

-- Function to set the hold duration for a ProximityPrompt
local function setHoldDuration(promptPath, duration)
    local success, prompt = pcall(function()
        return loadstring("return " .. promptPath)()
    end)
    
    if success and prompt and prompt:IsA("ProximityPrompt") then
        prompt.HoldDuration = duration
        print("Set HoldDuration for", promptPath, "to", duration)
    else
        warn("Failed to set HoldDuration for:", promptPath)
    end
end

-- Apply settings
for path, duration in pairs(promptSettings) do
    setHoldDuration(path, duration)
end

        end
        })

        FarmingSection:AddButton({
            Name = "Day & Bright",
            Callback = function()
                local lighting = game:GetService("Lighting")
lighting.TimeOfDay = "1:00:00" -- Sets the time to noon
lighting.Brightness = 10 -- Adjust brightness to simulate daytime
lighting.ClockTime = 1 -- Another way to ensure daytime

-- Optional: Reset fog or other effects
lighting.FogEnd = 100000 -- Removes fog for a clearer view

            end
            })


-------------------------------------------------------------------------------------------------------------------------------------------------------------------
local FarminSection = GeneralTab:CreateSection({
Name = "Visuals"
})


--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

--// Variables
local ESPEnabled = false
local NameTags = {}

-- Function to create a nametag above a player's head
local function createNameTag(player)
    if player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        if not NameTags[player] then
            local billboard = Instance.new("BillboardGui")
            billboard.Name = "NameTag"
            billboard.Parent = head
            billboard.Adornee = head
            billboard.Size = UDim2.new(0, 100, 0, 20)
            billboard.StudsOffset = Vector3.new(0, 2, 0)
            billboard.AlwaysOnTop = true

            local textLabel = Instance.new("TextLabel")
            textLabel.Parent = billboard
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.Text = player.Name
            textLabel.TextColor3 = Color3.new(1, 1, 1)
            textLabel.TextStrokeTransparency = 0.5
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.TextScaled = true

            NameTags[player] = billboard
        end
    end
end

-- Function to remove a nametag
local function removeNameTag(player)
    if NameTags[player] then
        NameTags[player]:Destroy()
        NameTags[player] = nil
    end
end

-- Function to handle ESP for a player's character when added
local function onCharacterAdded(player)
    player.CharacterRemoving:Connect(function()
        removeNameTag(player) -- Remove the nametag when the character dies
    end)

    -- Delay the creation of the NameTag to make sure the Head exists after respawn
    player.CharacterAdded:Connect(function()
        wait(0.1) -- Small delay to ensure character and head exist
        if ESPEnabled then
            createNameTag(player)
        end
    end)

    -- If the character already exists, create the name tag
    if player.Character then
        wait(0.1) -- Ensures the head is fully loaded
        if ESPEnabled then
            createNameTag(player)
        end
    end
end

-- Function to toggle ESP on or off
local function toggleESP(enabled)
    ESPEnabled = enabled
    if ESPEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                onCharacterAdded(player)
            end
        end
    else
        for player, _ in pairs(NameTags) do
            removeNameTag(player)
        end
    end
end

-- Listen for new players joining
Players.PlayerAdded:Connect(function(player)
    -- Handle ESP for new players
    if ESPEnabled then
        onCharacterAdded(player)
    end
end)

-- Remove NameTag when a player leaves
Players.PlayerRemoving:Connect(function(player)
    removeNameTag(player)
end)

-- Initialize connections for existing players (but donâ€™t create nametags yet)
for _, player in ipairs(Players:GetPlayers()) do
    onCharacterAdded(player)
end

-- GUI Toggle Button Implementation
local FarmingSection = {} -- Assume this is your GUI section implementation

FarminSection:AddToggle({
    Name = "Nametag",
    Flag = "FarmingSection_ShowNames",
    Callback = function(state)
        toggleESP(state) -- Toggle ESP on or off when button is clicked
    end
})


local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local espEnabled = false
local playerBoxes = {} -- Store boxes for all players
local playerHealthBars = {} -- Store health bars for all players
local playerNames = {} -- Store name displays for all players

-- Function to create a box using the Drawing API
local function createBox()
    local box = Drawing.new("Square")
    box.Thickness = 1
    box.Color = Color3.new(1, 1, 1) -- Red
    box.Transparency = 0.5
    box.Filled = false
    box.Visible = false
    return box
end

-- Function to create a health bar using the Drawing API
local function createHealthBar()
    local healthBar = Drawing.new("Square")
    healthBar.Thickness = 0.5
    healthBar.Color = Color3.new(0, 1, 0) -- Green (for full health)
    healthBar.Transparency = 0.5
    healthBar.Filled = true
    healthBar.Visible = false
    return healthBar
end

-- Function to create a name tag
local function createNameTag()
    local nameTag = Drawing.new("Text")
    nameTag.Size = 10 -- Slightly larger
    nameTag.Color = Color3.new(1, 1, 1) -- White
    nameTag.Transparency = 1
    nameTag.Center = true -- Center the text
    nameTag.Outline = true -- Add an outline for better visibility
    nameTag.Visible = false
    return nameTag
end

-- Toggle ESP visibility
local function toggleESP(state)
    espEnabled = state
    if not espEnabled then
        -- Hide all ESP elements when disabled
        for _, box in pairs(playerBoxes) do
            box.Visible = false
        end
        for _, healthBar in pairs(playerHealthBars) do
            healthBar.Visible = false
        end
        for _, nameTag in pairs(playerNames) do
            nameTag.Visible = false
        end
    end
end

-- Update ESP elements for each player
RunService.RenderStepped:Connect(function()
    if not espEnabled then return end

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
            local character = player.Character
            local humanoid = character:FindFirstChild("Humanoid")
            local head = character:FindFirstChild("Head")
            local box = playerBoxes[player] or createBox()
            local healthBar = playerHealthBars[player] or createHealthBar()
            local nameTag = playerNames[player] or createNameTag()

            -- Create the ESP elements if they don't exist
            if not playerBoxes[player] then playerBoxes[player] = box end
            if not playerHealthBars[player] then playerHealthBars[player] = healthBar end
            if not playerNames[player] then playerNames[player] = nameTag end

            if head and humanoid and humanoid.Health > 0 then
                -- Get the position of the player's head and torso
                local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
                local torsoPos = character:FindFirstChild("HumanoidRootPart").Position
                local distance = (LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - torsoPos).Magnitude

                -- Scale down the ESP elements based on distance
                local scaleFactor = math.clamp(1 / (distance / 10), 0.4, 1) -- Clamps scale between 0.4 and 1

                if onScreen then
                    -- Update the box position and size (scaled)
                    box.Size = Vector2.new(75 * scaleFactor, 100 * scaleFactor) -- Smaller box around the player
                    box.Position = Vector2.new(screenPos.X - (37.5 * scaleFactor), screenPos.Y - (50 * scaleFactor))
                    box.Visible = true

                    -- Update the health bar position and size (scaled)
                    local healthPercent = humanoid.Health / humanoid.MaxHealth
                    healthBar.Size = Vector2.new(5 * scaleFactor, 100 * scaleFactor * healthPercent) -- Height proportional to health
                    healthBar.Position = Vector2.new(box.Position.X - (10 * scaleFactor), box.Position.Y + (100 * scaleFactor * (1 - healthPercent))) -- Align next to box
                    healthBar.Color = Color3.new(1 - healthPercent, healthPercent, 0) -- Red to green based on health
                    healthBar.Visible = true

                    -- Update the name tag position (scaled)
                    nameTag.Position = Vector2.new(screenPos.X, screenPos.Y - (60 * scaleFactor)) -- Above the box
                    nameTag.Size = 16 * scaleFactor -- Scale the font size
                    nameTag.Text = player.Name -- Show the player's name
                    nameTag.Visible = true
                else
                    box.Visible = false
                    healthBar.Visible = false
                    nameTag.Visible = false
                end
            else
                box.Visible = false
                healthBar.Visible = false
                nameTag.Visible = false
            end
        elseif playerBoxes[player] then
            -- Hide boxes and tags for players without valid characters
            playerBoxes[player].Visible = false
            playerHealthBars[player].Visible = false
            playerNames[player].Visible = false
        end
    end
end)

-- Cleanup boxes and tags when players leave
Players.PlayerRemoving:Connect(function(player)
    if playerBoxes[player] then
        playerBoxes[player]:Remove()
        playerBoxes[player] = nil
    end
    if playerHealthBars[player] then
        playerHealthBars[player]:Remove()
        playerHealthBars[player] = nil
    end
    if playerNames[player] then
        playerNames[player]:Remove()
        playerNames[player] = nil
    end
end)


-- Player ESP with Tracers, Boxes, and Usernames
-- Highlights all players with tracers, boxes, and their usernames

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

local espEnabled = false -- Toggle state
local tracerColor = Color3.fromRGB(255, 255, 255) -- Tracer color set to white
local boxColor = Color3.fromRGB(255, 255, 255) -- Box color set to white
local usernameColor = Color3.fromRGB(255, 255, 255) -- Username color set to white
local transparency = 0.5 -- General transparency
local tracers = {} -- Store tracers for players
local boxes = {} -- Store boxes for players
local usernames = {} -- Store usernames for players

-- Create ESP elements for a player
local function createESP(player)
    local tracer = Drawing.new("Line")
    tracer.Visible = false
    tracer.Color = tracerColor
    tracer.Thickness = 0.5
    tracer.Transparency = transparency
    tracers[player] = tracer

    local box = Drawing.new("Square")
    box.Visible = false
    box.Color = boxColor
    box.Thickness = 0.5
    box.Transparency = transparency
    boxes[player] = box

    local username = Drawing.new("Text")
    username.Visible = false
    username.Color = usernameColor
    username.Size = 10 -- Reduced the size here
    username.Center = true
    username.Outline = true
    usernames[player] = username
end

-- Remove ESP elements for a player
local function removeESP(player)
    if tracers[player] then
        tracers[player]:Remove()
        tracers[player] = nil
    end
    if boxes[player] then
        boxes[player]:Remove()
        boxes[player] = nil
    end
    if usernames[player] then
        usernames[player]:Remove()
        usernames[player] = nil
    end
end

-- Update ESP dynamically
local function updateESP()
    for player, tracer in pairs(tracers) do
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player ~= LocalPlayer then
            local rootPart = player.Character.HumanoidRootPart
            local head = player.Character:FindFirstChild("Head")

            local partPosition, onScreen = Camera:WorldToViewportPoint(rootPart.Position)
            local headPosition = head and Camera:WorldToViewportPoint(head.Position) or nil

            if onScreen then
                -- Update tracer
                tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) -- Bottom center of the screen
                tracer.To = Vector2.new(partPosition.X, partPosition.Y)
                tracer.Visible = espEnabled

                -- Update box
                local size = Vector3.new(4, 6, 0) -- Adjust size for the box
                local boxSize = (Camera:WorldToViewportPoint(rootPart.Position + Vector3.new(size.X, size.Y, 0)) - 
                                 Camera:WorldToViewportPoint(rootPart.Position - Vector3.new(size.X, size.Y, 0))).magnitude
                boxes[player].Position = Vector2.new(partPosition.X - boxSize / 2, partPosition.Y - boxSize / 2)
                boxes[player].Size = Vector2.new(boxSize, boxSize * 1.5) -- Adjust height ratio
                boxes[player].Visible = espEnabled

                -- Update username
                if headPosition then
                    usernames[player].Position = Vector2.new(headPosition.X, headPosition.Y - 20)
                    usernames[player].Text = player.Name
                    usernames[player].Visible = espEnabled
                end
            else
                tracer.Visible = false
                boxes[player].Visible = false
                usernames[player].Visible = false
            end
        else
            tracer.Visible = false
            boxes[player].Visible = false
            usernames[player].Visible = false
        end
    end
end

-- Enable ESP
local function enableESP()
    espEnabled = true
    for _, player in ipairs(Players:GetPlayers()) do
        if not tracers[player] then
            createESP(player)
        end
    end
end

-- Disable ESP
local function disableESP()
    espEnabled = false
    for _, tracer in pairs(tracers) do
        tracer.Visible = false
    end
    for _, box in pairs(boxes) do
        box.Visible = false
    end
    for _, username in pairs(usernames) do
        username.Visible = false
    end
end

-- Handle player additions
Players.PlayerAdded:Connect(function(player)
    createESP(player)
end)

-- Handle player removals
Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

-- GUI Toggle
FarminSection:AddToggle({
    Name = "Tracer Esp",
    Flag = "FarmingSection_PlayerESP",
    Callback = function(state)
        if state then
            enableESP()
        else
            disableESP()
        end
    end,
})

-- Continuous updates
RunService.RenderStepped:Connect(function()
    if espEnabled then
        updateESP()
    end
end)

print("[ESP] Player ESP with Tracers, Boxes, and Usernames loaded.")


-- GUI toggle button for ESP
FarminSection:AddToggle({
    Name = 'Square Esp',
    Flag = 'FarmingSection_TogglePlayerESP',
    Callback = function(state)
        toggleESP(state)
    end
})
-------------------------------------------------------------------------------------------------------


local FarmiSection = GeneralTab:CreateSection({
    Name = "Hitbox"
    })

    local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local originalSizes = {} -- Store original head sizes for all players
local hitboxEnabled = false

-- Function to scale the head hitbox
local function scaleHeadHitbox(player, scale)
    if player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        if not originalSizes[player] then
            originalSizes[player] = head.Size -- Save original size if not already saved
        end
        head.Size = originalSizes[player] * scale -- Scale the head
        head.CanCollide = false -- Disable collision for fairness
    end
end

-- Function to reset the head hitbox to its original size
local function resetHeadHitbox(player)
    if player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        if originalSizes[player] then
            head.Size = originalSizes[player] -- Reset to original size
        end
    end
end

-- Toggle the hitbox scaling on or off
local function toggleHitbox(state)
    hitboxEnabled = state
    if not hitboxEnabled then
        -- Reset hitboxes when disabled
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                resetHeadHitbox(player)
            end
        end
    end
end

-- Apply the hitbox scaling to a player's character
local function applyHitboxScaling(player)
    player.CharacterAdded:Connect(function(character)
        -- Wait for the character's head to load properly before scaling
        local head = character:WaitForChild("Head", 10) -- 10 second timeout in case of issues
        if head and hitboxEnabled then
            scaleHeadHitbox(player, 2) -- Make the head hitbox twice as big
        end
    end)

    -- Scale hitbox for already loaded characters
    if player.Character then
        scaleHeadHitbox(player, 2)
    end
end

-- Apply hitbox scaling to all players, including new and respawned ones
local function applyHitboxScalingToAll()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            applyHitboxScaling(player)
        end
    end
end

-- Update the hitboxes for players when enabled
RunService.RenderStepped:Connect(function()
    if hitboxEnabled then
        applyHitboxScalingToAll()
    end
end)

-- Ensure that the head hitbox is scaled for new players who join
Players.PlayerAdded:Connect(function(player)
    if hitboxEnabled then
        applyHitboxScaling(player)
    end
end)

-- Reset hitbox when players leave
Players.PlayerRemoving:Connect(function(player)
    resetHeadHitbox(player)
end)

-- GUI toggle button for hitbox scaling
FarmiSection:AddToggle({
    Name = 'Bigger Head',
    Flag = 'FarmingSection_ToggleHeadHitbox',
    Callback = function(state)
        toggleHitbox(state)
        if hitboxEnabled then
            applyHitboxScalingToAll() -- Apply to all existing players when toggled on
        end
    end
})









    
------------------------------------------------------------------------------------------------------

local TpsTab = PepsisWorld:CreateTab({
    Name = "Teleports"
    })

local TpsSection = TpsTab:CreateSection({
 Name = "Tps"
 })
        

 TpsSection:AddButton({
    Name = "Gun Store",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(597, 8, 1041)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpsSection:AddButton({
    Name = "Gun Attachments",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(588, 8, 1052)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpsSection:AddButton({
    Name = "Bank",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(400, 8, 793)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpsSection:AddButton({
    Name = "Deli",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(511, 8, 764)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpsSection:AddButton({
    Name = "Gas Station",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(877, 8, 265)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpsSection:AddButton({
    Name = "ATM",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(418, 8, 545)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpsSection:AddButton({
    Name = "Hiest Man",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(722, 8, -164)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpsSection:AddButton({
    Name = "Dispensary",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(-604, 8, 494)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpsSection:AddButton({
    Name = "Buy Weed",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(360, -2, 1052)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpsSection:AddButton({
    Name = "Chains",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(532, 8, 603)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpsSection:AddButton({
    Name = "Studio Job",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(362, 8, 838)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpsSection:AddButton({
    Name = "Poster 1",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(32, 8, 244)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpsSection:AddButton({
    Name = "Poster 2",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(893, 8, 254)
   YourRoot.CFrame = LocationToTP2
   end
   })

   
   TpsSection:AddButton({
    Name = "Chicken&Chips",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(363, 8, 535)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpsSection:AddButton({
    Name = "Mask",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(403, 8, 128)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpsSection:AddButton({
    Name = "808 Turf",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(610, 12, -20)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpsSection:AddButton({
    Name = "650 Turf",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(-343, 12, 333)
   YourRoot.CFrame = LocationToTP2
   end
   })

   ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------


   local TpssTab = PepsisWorld:CreateTab({
    Name = "Farming"
    })

local TpssSection = TpssTab:CreateSection({
 Name = "Tps"
 })

 TpssSection:AddButton({
    Name = "Trapper",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(1108, 8, 271)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpssSection:AddButton({
    Name = "Junkie 1",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(967, 8, 1066)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpssSection:AddButton({
    Name = "Junkie 2",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(-210, 8, 559)
   YourRoot.CFrame = LocationToTP2
   end
   })

   TpssSection:AddButton({
    Name = "Junkie 3",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(-62, 8, 1063)
   YourRoot.CFrame = LocationToTP2
   end
   })


   TpssSection:AddButton({
    Name = "Junkie 4",
    Callback = function()
   local YourRoot = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
   --warn(YourRoot.CFrame)
   --local LocationToTP = workspace["El_belicorp"].HumanoidRootPart.CFrame
    local LocationToTP2 = CFrame.new(788, 8, 126)
   YourRoot.CFrame = LocationToTP2
   end
   })

